//TC = O(N ^ 3)
//SC = O(1)

class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target)
     {
      vector<vector<int>> ans;
      sort(nums.begin(), nums.end());
        for(int i = 0; i < nums.size(); i++){
        if(i != 0 && nums[i] == nums[i - 1]) continue;
        for(int j = i + 1; j < nums.size(); j++)
        {
          if(j != i + 1 && nums[j] == nums[j - 1]) continue;
          int lo = j + 1;
          int hi = nums.size() - 1;
          while(lo < hi){
            long long int sum = (long long) nums[i] + (long long) nums[j] + (long long) nums[lo] + (long long) nums[hi];
            if(target - sum == 0)
            {
              ans.push_back({nums[i], nums[j], nums[lo], nums[hi]});
              lo++;
              while(lo < hi && nums[lo] == nums[lo - 1]) lo++;
            }
            else if(sum < target) lo++;
            else hi--;
          }
          
        }
      }
      
      return ans;
     }
};
